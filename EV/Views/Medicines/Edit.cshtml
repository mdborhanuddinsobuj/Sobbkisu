@model EV.Models.Medicines

@{
    ViewBag.Title = "Edit medicine";
}

<div class="row">
    <div class="col s12 m8 l8 offset-m2 offset-l2">
        <div id="basic-form" class="card card card-default scrollspy">
            <div class="card-content">

                <div class="row">
                    <h4 class="card-title">
                        Edit @Model.pName
                        <div class="float-right">
                            <a href="@Url.Action("Index", "Medicines")" class="mb-1 btn-floating waves-effect waves-light gradient-45deg-green-teal gradient-shadow float-right">
                                <i class="material-icons" style="line-height:40px">arrow_back</i>
                            </a>
                        </div>
                    </h4>
                </div>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="">
                        <div class="row">
                            <hr class="mt-2 pink border-none" style="height:2px" />
                            @Html.ValidationSummary(true, "", new { @class = "pink-text" })
                            @Html.HiddenFor(model => model.pId)
                            <div class="input-field s12 col">
                                @Html.LabelFor(model => model.pName, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.pName, new { htmlAttributes = new { @class = "" } })
                                @Html.ValidationMessageFor(model => model.pName, "", new { @class = "pink-text" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="input-field s12 col">
                                @Html.LabelFor(model => model.qty, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.qty, new { htmlAttributes = new { @class = "" } })
                                @Html.ValidationMessageFor(model => model.qty, "", new { @class = "pink-text" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="input-field s12 col">
                                @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "" })
                                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "" } })
                                @Html.ValidationMessageFor(model => model.price, "", new { @class = "pink-text" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="input-field s12 col">
                                @Html.EditorFor(model => model.expiryDate, new { htmlAttributes = new { @class = "datepicker", @id = "exDate", @type = "text" } })
                                @Html.LabelFor(model => model.expiryDate, htmlAttributes: new { @for = "exDate" })
                                @Html.ValidationMessageFor(model => model.expiryDate, "", new { @class = "pink-text" })
                            </div>
                        </div>

                        <div class="col s12 m8 l8">
                            <div class="row">
                                <div class="file-field input-field">
                                    <div class="btn">
                                        <span>File</span>
                                        <input type="file" name="File" id="File">
                                        @Html.EditorFor(model => model.pImage, new { htmlAttributes = new { @class = "", @style = "display:none", @id = "fileName" } })
                                    </div>
                                    <div class="file-path-wrapper">
                                        <input class="file-path validate" type="text">
                                    </div>
                                    @Html.ValidationMessageFor(model => model.pImage, "", new { @class = "pink-text" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="input-field">
                                    <p>
                                        <label class="mr-2">
                                            @Html.RadioButtonFor(model => model.pStatus, "Active", new { @checked = "checked" }) <span>Active</span>
                                        </label>
                                        <label>
                                            @Html.RadioButtonFor(model => model.pStatus, "Inactive") <span>Inactive</span>
                                        </label>
                                    </p>
                                    @Html.ValidationMessageFor(model => model.pStatus, "", new { @class = "pink-text" })
                                </div>
                            </div>
                        </div>
                        <div class="col s4 m4 l4">
                            <img class="col m12 l12" id="ImagePreview" src="~/Images/@Model.pImage" height="150" />
                        </div>
                        <div class="row">
                            <div class="input-field col s12 m8 l8">
                                @Html.DropDownList("cId", null, htmlAttributes: new {})
                                @Html.ValidationMessageFor(model => model.cId, "", new { @class = "pink-text" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group">
                                <div class="">
                                    <input type="submit" value="Create" class="btn btn-default" />
                                    <span id="msg">@ViewBag.msg</span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#File").change(function () {
            var file = $("input[type=file]").get(0).files[0];
            if (file) {
                var reader = new FileReader();

                reader.onload = function () {
                    $("#ImagePreview").attr("src", reader.result);
                    $("#fileName").val(file);
                }
                reader.readAsDataURL(file);
            }
        })
        $(document).ready(function () {
            $('.datepicker').datepicker();
        });
        $("form").attr("enctype", "multipart/form-data");
    </script>
}
